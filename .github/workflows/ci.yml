name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with: { python-version: "3.10" }

    - name: Install codespell
      run: pip3 install codespell

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format-14 -P cmake/lint.cmake


  sanitize:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies - boost-python
      run: sudo apt-get update -q
        && sudo apt-get install libboost-python-dev -q -y

    - name: Configure
      env: { CXX: clang++-14 }
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build cmakebuild/sanitize -j 2

    - name: Test
      working-directory: cmakebuild/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1"
        UBSAN_OPTIONS: print_stacktrace=1
      run: ctest --output-on-failure -j 2

  test:
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04, ubuntu-20.04]

        # type: [shared, static]
        type: [shared]

        include:
        - { type: shared, shared: YES }
        # - { type: static, shared: NO }

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies static analyzers and boost-python (Linux)
      if: runner.os == 'Linux'
      run: >-
        sudo apt-get install clang-tidy-12 cppcheck libboost-python-dev -y -q

        sudo update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-12 120
    
    - name: Install boost-python (MacOS)
      if: runner.os == 'macOS'
      run: brew install boost-python3

    - name: Configure 
      run: cmake "--preset=ci-$env:RUNNER_OS"
        -D BUILD_SHARED_LIBS=${{ matrix.shared }}

    - name: Build
      run: cmake --build cmakebuild --config Release -j 2

    - name: Install
      run: cmake --install cmakebuild --config Release --prefix prefix

    - name: Test
      env:
        PYTHONPATH: "$env:GITHUB_WORKSPACE/cmakebuild"
      run: python -c 'import pytango; print(pytango)'

  